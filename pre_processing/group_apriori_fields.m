function [apriori_grouped, apriori_group_names, grp_idx] = group_apriori_fields(D)


% define keywords for clustering groups
group_keywords = [{{'speed';'nTrials';'nBouts';'bout_length'}};...
    {{'bout_clumpiness'}};...
    {'Circadian gravitactic'};...
    {{'hand_clumpiness';'iti';'light_clumpiness'}};...
    {'switchiness'};...
    {{'Arena circling';'Phototaxis circling';'Culling circling';'right_bias'}};...
    {'Optomotor circling';'Circadian circling';'optomotor_index'};...
    {{'light_bias';'Phototaxis occupancy'}};...
    {'Olfaction occupancy'}];

% initialize grouped field names
apriori_group_names = {'Activity';'Bout clumpiness';'Gravitaxis';'Clumpiness';'Switchiness';'Handedness';...
                        'Opto Handedness';'Circadian circling';'Opto index';...
                        'Phototaxis';'Odor sensitivity'};

% get group indices and group data by indices
std_fn = standardize_fieldnames(D.fields);
[~, grp_idx] = arrayfun(@(gkw) groupFields(std_fn, gkw), group_keywords,...
                    'UniformOutput', false);
apriori_grouped = cellfun(@(idx) D.data(:,idx), grp_idx, 'UniformOutput', false);


